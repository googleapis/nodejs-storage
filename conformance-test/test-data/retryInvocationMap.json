{
    "storage.buckets.delete": [
        "deleteBucket"
    ],
    "storage.buckets.patch": [
        "deleteLabels",
        "disableRequesterPays",
        "enableRequesterPays",
        "enableLogging",
        "removeRetentionPeriod",
        "setCorsConfiguration",
        "setLabels",
        "setRetentionPeriod"
    ],
    "storage.buckets.insert": [
        "create",
        "createBucket"
    ],
    "storage.buckets.get": [
        "bucketGet",
        "getLabels",
        "bucketGetMetadata",
        "bucketExists"
    ],
    "storage.objects.list": [
        "getFilesStream"
    ],
    "storage.notifications.list": [
        "getNotifications"
    ],
    "storage.buckets.lockRententionPolicy": [
        "lock"
    ],
    "storage.objects.patch": [
        "bucketMakePrivate",
        "bucketSetMetadata",
        "fileMakePrivate",
        "setMetadata"
    ],
    "storage.object_acl.insert": [
        "bucketMakePublic",
        "fileMakePublic"
    ],
    "storage.objects.rewrite": [
        "bucketSetStorageClass",
        "move",
        "rename",
        "rotateEncryptionKey",
        "setStorageClass"
    ],
    "storage.objects.insert": [
        "bucketUploadResumable",
        "bucketUploadMultipart",
        "createResumableUpload",
        "createWriteStreamResumable",
        "createWriteStreamMultipart",
        "saveResumable",
        "saveMultipart",
        "deleteResumableCache"
    ],
    "storage.objects.delete": [
        "deleteFiles",
        "fileDelete"
    ],
    "storage.objects.get": [
        "download",
        "exists",
        "getExpirationDate",
        "getMetadata",
        "isPublic",
        "createReadStream"
    ],
    "storage.notifications.delete": [
        "notificationDelete"
    ],
    "storage.notifications.insert": [
        "createNotification",
        "notificationCreate"
    ],
    "storage.notifications.get": [
        "notificationExists",
        "notificationGet",
        "notificationGetMetadata"
    ],
    "storage.buckets.getIamPolicy": [
        "iamGetPolicy"
    ],
    "storage.buckets.setIamPolicy": [
        "iamSetPolicy"
    ],
    "storage.buckets.testIamPermission": [
        "iamTestPermissions"
    ],
    "storage.buckets.list": [
        "getBuckets",
        "getBucketsStream"
    ],
    "storage.objects.compose": [
        "combine"
    ]
}
